---
version: 2.1
orbs:
  slack: circleci/slack@5.2.0
jobs:
  ensure_formatting:
    docker:
      - image: cimg/python:3.13
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies
          command: pip3 install --user .[dev]
      - run:
          name: confirm black version
          command: black --version
      - run:
          name: run isort check
          command: isort --check-only .
      - run:
          name: run black check
          command: black --check .
      - slack/notify:
          branch_pattern: main
          event: fail
          template: basic_fail_1
  test:
    docker:
      - image: cimg/python:3.13
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: install dependencies
          command: pip3 install --user .
      - run:
          name: run tests
          command: python -m unittest
  linter:
    docker:
      - image: alpine/flake8
    working_directory: ~/repo
    steps:
      - checkout
      - run: apk update && apk upgrade && apk --no-cache add bash
      - run:
          name: flake8
          command: flake8 --ignore=E,W ~/repo
      - slack/notify:
          branch_pattern: main
          event: fail
          template: basic_fail_1
  build:
    working_directory: ~/openbas-client
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - run:
          name: install dependencies
          command: >
            pip3 install --user .[dev]
      - run:
          name: check version
          command: |
            package_version="$(
                python3 -c 'import pyobas; print(pyobas.__version__)'
            )"
            [ "${CIRCLE_TAG}" = "${package_version}" ] \
              || printf "Version mismatch: %s is not equal to %s\n" \
                 "${CIRCLE_TAG}" "${package_version}"
      - run:
          name: build
          command: >
            SOURCE_DATE_EPOCH="$(git log -1 --pretty=%ct)" python3 -m build
      - slack/notify:
          branch_pattern: main
          event: fail
          template: basic_fail_1
      - persist_to_workspace:
          root: ~/openbas-client
          paths:
            - dist
  deploy:
    working_directory: ~/openbas-client
    docker:
      - image: cimg/python:3.13
    steps:
      - checkout
      - attach_workspace:
          at: ~/openbas-client
      - run:
          name: install dependencies
          command: pip3 install --user .
      - run:
          name: install twine
          command: pip3 install twine
      - run:
          name: init .pypirc
          command: >
            printf "[pypi]\nusername = __token__\npassword = %s\n"
            "${PYPI_PASSWORD}" >> ~/.pypirc
      - run:
          name: upload to pypi
          command: twine upload dist/*
      - slack/notify:
          branch_pattern: main
          event: fail
          template: basic_fail_1
  notify_rolling:
    docker:
      - image: "cimg/base:stable"
    steps:
      - slack/notify:
          event: pass
          template: basic_success_1
  notify:
    docker:
      - image: "cimg/base:stable"
    steps:
      - slack/notify:
          event: pass
          template: basic_success_1

workflows:
  version: 2
  openbas_client_python:
    jobs:
      - ensure_formatting:
          filters:
            tags:
              only: /.*/
      - linter:
          filters:
            tags:
              only: /.*/
      - test:
          filters:
            tags:
              only: /.*/
      - build:
          filters:
            tags:
              only: /.*/
          requires:
            - ensure_formatting
            - linter
            - test
      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)+(\.[0-9]+)?\.?(\w)*/
            branches:
              ignore: /.*/
      - notify_rolling:
          requires:
            - build
          filters:
            branches:
              only: /main/
      - notify:
          requires:
            - deploy
          filters:
            tags:
              only: /[0-9]+(\.[0-9]+)+(\.[0-9]+)?\.?(\w)*/
            branches:
              ignore: /.*/
